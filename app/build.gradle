apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.sohini101.studentsrecords"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
// The support library eliminates this necessity by providing vector drawable support for older Android versions, but we need to first disable this auto-generation tool by adding these lines to our app/build.gradle configuration:
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
repositories {
    mavenCentral()
}
ext {
    supportLibVersion = '26.1.0'  // variable that can be referenced to keep support libs consistent
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // Gradle for circular image being shown in header of NavigationView.
    implementation'de.hdodenhof:circleimageview:2.0.0'
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"//navigation
    implementation "com.android.support:design:${supportLibVersion}"//navigation
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"//recycler view
    implementation"com.android.support:support-vector-drawable:${supportLibVersion}"
    // VectorDrawableCompat
    implementation "com.android.support:animated-vector-drawable:${supportLibVersion}"
    // AnimatedVectorDrawableCompat
    implementation "com.android.support:transition:${supportLibVersion}"
// but now includes back ported support for animating view hierarchies down to Android 4.0. However, there is no support for activity/fragment transitions currently.
    implementation "com.android.support:support-annotations:${supportLibVersion}"
//To leverage the annotations library, you can also explicitly add it to your Gradle file. Adding the AppCompat or support design library implicitly adds it:
    // Glide image library
    implementation'com.github.bumptech.glide:glide:3.7.0'
    implementation 'cn.pedant.sweetalert:library:1.3'
//circular img
   implementation 'de.hdodenhof:circleimageview:1.2.1'
}
